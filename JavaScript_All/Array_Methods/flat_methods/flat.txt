* flat() Method:

Note:- Dekho flat method ke andr nested array vgera hai to appn depth de sakte hai uske andr mano vo kitne depth me jakr nested ko bhi flat karega 

The flat() method is used to flatten a nested array structure to a specified depth. It creates a new array with all the sub-array elements concatenated into it.
Syntax: array.flat(depth)
Parameters:
depth (Optional): Specifies the depth level of nesting to flatten. If no depth is provided, the default is 1.

Example 1:- 

const nestedArray = [[1, 2], [3, 4], [5, 6]];
const flattenedArray = nestedArray.flat();
console.log(flattenedArray); // Output: [1, 2, 3, 4, 5, 6]

Example 2:-

 const difficultObject = [
  { id: 1, name: 'Item 1', tags: ['tag1', 'tag2', 'tag3'] },
  { id: 2, name: 'Item 2', tags: ['tag4', 'tag5'] },
  { id: 3, name: 'Item 3', tags: ['tag6'] },
  { id: 4, name: 'Item 4', tags: ['tag7', 'tag8', 'tag9'] }
 ];

const flattenedArray = difficultObject.map(obj => obj.tags);
console.log(flattenedArray.flat());

O/P:- 
 ['tag1', 'tag2', 'tag3','tag4', 'tag5','tag6','tag7', 'tag8', 'tag9']

Example 3 :-

const arrayOfObjects = [
  [{ id: 1, name: 'Item 1' }, { id: 2, name: 'Item 2' },[{ id: 5, name: 'Item 10' }, { id: 7, name: 'Item 12' }]],
  [{ id: 3, name: 'Item 3' }, { id: 4, name: 'Item 4' }]
];

const deeplyFlattenedArray = arrayOfObjects.flat(10);

console.log(deeplyFlattenedArray); 
